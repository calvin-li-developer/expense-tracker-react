{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","children","classList","className","ExpensesFilter","onChangeFilter","yearSelected","value","onChange","event","target","ExpenseDate","date","month","toLocaleString","day","year","getFullYear","ExpenseItem","id","title","amount","onDelete","onClick","ExpensesList","items","length","expensesContent","getDeletedID","itemID","map","item","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpensesChart","expenses","chartDataPoints","expense","getMonth","Expenses","onDeleteExpense","useState","getFilteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","console","log","ExpenseForm","onSaveExpenseData","onCancel","getTitle","setTitle","getAmount","setAmount","getDate","setDate","onSubmit","preventDefault","expenseData","Date","type","min","step","NewExpense","onAddExpense","isEditing","setIsEditing","getExpenseData","random","DUMMY_EXPENSES","App","getExpenses","setExpenses","prevExpenses","updatedExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.641b9caf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.css'\r\n\r\nconst Card = ({ children, className }) => {\r\n    const classList = \"card \" + className;\r\n\r\n    return (\r\n        <div className={classList}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = ({ onChangeFilter, yearSelected }) => {\r\n    const dropDownChangeHandler = (event) => {\r\n        onChangeFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={yearSelected} onChange={dropDownChangeHandler}>\r\n                    <option value='All'>All</option>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from \"react\";\r\nimport './ExpenseDate.css'\r\n\r\nconst ExpenseDate = ({ date }) => {\r\n    const month = date.toLocaleString('en-US', { month: 'long' });\r\n    const day = date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from \"react\";\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = ({ id, date, title, amount, onDelete }) => {\r\n\r\n    const deleteClickedHandler = () => {\r\n        onDelete(id);\r\n    };\r\n\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpenseDate date={date} />\r\n                <div className='expense-item__description'>\r\n                    <h2>{title}</h2>\r\n                    <div className='expense-item__price'>${amount}</div>\r\n                    <button className='expense-item__price' onClick={deleteClickedHandler}>Delete</button>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = ({ items, onDelete }) => {\r\n    \r\n\r\n    if (items.length === 0)\r\n    {\r\n        let expensesContent = <p>Found no expenses.</p>;\r\n        return <h2 className='expenses-list__fallback'>{expensesContent}</h2>;\r\n    }\r\n\r\n    const getDeletedID = itemID =>\r\n    {\r\n        onDelete(itemID);\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {\r\n                items.map(item =>\r\n                    <ExpenseItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        amount={item.amount}\r\n                        date={item.date}\r\n                        id={item.id}\r\n                        onDelete={getDeletedID}\r\n                    />)\r\n            }\r\n        </ul>\r\n        );\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = ({ value, maxValue, label }) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(maxValue > 0)\r\n    {\r\n        barFillHeight = Math.round((value/maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div \r\n                className='chart-bar__fill' \r\n                style={{height: barFillHeight}}>\r\n                </div>\r\n            </div>\r\n            <div className='chart-bar__label'>{label}</div>\r\n        </div>);\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = ({ dataPoints }) => {\r\n    const dataPointValues = dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {dataPoints.map(dataPoint =>\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = ({expenses}) => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n\r\n    for(const expense of expenses)\r\n    {\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport './Expenses.css'\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = ({ items, onDeleteExpense }) => {\r\n    const [getFilteredYear, setFilteredYear] = useState('All');\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n        console.log(selectedYear);\r\n    };\r\n\r\n    let filteredExpenses = items.filter(item => item.date.getFullYear().toString() === getFilteredYear);\r\n\r\n    if (getFilteredYear === 'All')\r\n    {\r\n        filteredExpenses = items;\r\n    }\r\n\r\n    const onDeletedExpense = (itemID) =>\r\n    {\r\n        onDeleteExpense(itemID);\r\n    };\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter yearSelected={getFilteredYear} onChangeFilter={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n            <ExpensesList items={filteredExpenses} onDelete={onDeletedExpense}/>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\r\n    const [getTitle, setTitle] = useState('');\r\n    const [getAmount, setAmount] = useState('');\r\n    const [getDate, setDate] = useState('');\r\n\r\n    // const [userInput, setUserInput] = useState(\r\n    //     {\r\n    //         getTitle: '',\r\n    //         getAmount: '',\r\n    //         getDate: ''\r\n    //     }\r\n    // );\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.target.value);\r\n\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     getTitle: event.target.value            \r\n        // });\r\n\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, getTitle: event.target.value }\r\n        // });\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setAmount(event.target.value);\r\n\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     getAmount: event.target.value\r\n        // });\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setDate(event.target.value);\r\n\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     getDate: event.target.value\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: getTitle,\r\n            amount: +getAmount,\r\n            date: new Date(getDate)\r\n        };\r\n\r\n        onSaveExpenseData(expenseData);\r\n        setAmount('');\r\n        setTitle('');\r\n        setDate('');\r\n\r\n        // console.log(expenseData);\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={getTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01' value={getAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' step='2022-12-31' value={getDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type='button' onClick={onCancel}>Cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = ({ onAddExpense }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (getExpenseData) => {\r\n        const expenseData = {\r\n            ...getExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const endEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm\r\n                onSaveExpenseData={saveExpenseDataHandler}\r\n                onCancel={endEditingHandler}\r\n            />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2019, 7, 14),\n  },\n  {\n    id: 'e5',\n    title: 'Teddy Bear',\n    amount: 14.12,\n    date: new Date(2019, 5, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2020, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\n\nconst App = () => {\n\n  const [getExpenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    }\n    );\n  };\n\n  const DeleteExpenseHandler = itemID => {\n    setExpenses(prevExpenses => {\n      const updatedExpenses = prevExpenses.filter(item => item.id !== itemID);\n      return [...updatedExpenses];\n    }\n    );\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses\n        items={getExpenses}\n        onDeleteExpense={DeleteExpenseHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App/>);\n"],"sourceRoot":""}